# Map data model <a name="map-data-model"></a>

This is a model that contains map data compatible with `MapView`.

This module is in UMD format. It will create
`ribcageGoogleMaps.models.mapDataModel`,
`ribcageGoogleMaps.models.MapDataModel`, and
`ribcageGoogleMaps.modelMixins.MapDataModel` globals if not used with an AMD
loader such as RequireJS.

This module depends on DaHelpers and `ribcageGoogleMaps.latLongModel.

 + [`mapDataModelMixin`](#mapdatamodelmixin)
   - [`#heading(v)`](#heading-v)
   - [`#pitch(v)`](#pitch-v)
   - [`MapDataModel`](#mapdatamodel)
 + [Exports](#exports)


## `mapDataModelMixin` <a name="mapdatamodelmixin"></a>

This mixin implements the API of the `MapDataModel`.

It extends the `LatLongModel` to add heading and pitch information.

### `#heading(v)` <a name="heading-v"></a>

This is an accessor for the `heading` attribute. The setting will convert any
value to float. The value will be `NaN` if it cannot be parsed by `parseFloat`.

Returns current value if passed no arguments, otherwise sets the value to `v`.

### `#pitch(v)` <a name="pitch-v"></a>

This is an accessor for the `pitch` attribute. The setting will convert any
value to float. The value will be `NaN` if it cannot be parsed by `parseFloat`.

Returns current value if given no arguments, otherwise sets the value to `v`.

### `MapDataModel` <a name="mapdatamodel"></a>

Please see the documenation for [`mapDataModelMixin`](#mapdatamodelmixin) for
more information about this model's API.

## Exports <a name="exports"></a>

This module exports `mixin` and `Model` properties.